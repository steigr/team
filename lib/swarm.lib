. $TEAM_LIB/team.lib
. $TEAM_LIB/coreos.lib

_swarm_discovery() {
  $TEAM swarm token
}

swarm_write_frontend_unit() {
  cat<<EO_SWARM_UNIT | tee $1
[Unit]
Description=Docker Swarm Cluster Frontend
Requires=early-docker.service
After=early-docker.service
[Service]
Environment=$(coreos_early_docker_env)
ExecStartPre=-/usr/bin/docker rm swarm
ExecStartPre=$TEAM swarm environment /run/swarm/env
ExecStart=/usr/bin/docker run --name=swarm --env-file=/run/swarm/env --net=host swarm manage
ExecStop=-/usr/bin/docker stop swarm
EO_SWARM_UNIT
  coreos_init reload
}

swarm_write_announcement_unit() {
  cat<<EO_BEE_UNIT | tee $1
[Unit]
Description=Docker Swarm Cluster Announcement
Requires=early-docker.service
After=early-docker.service
[Service]
Environment=$(coreos_early_docker_env)
ExecStartPre=-/usr/bin/docker rm bee
ExecStartPre=$TEAM swarm environment /run/swarm/env
ExecStart=/usr/bin/docker run --name=bee --env-file=/run/swarm/env --net=host swarm join
ExecStop=-/usr/bin/docker stop bee
EO_BEE_UNIT
  coreos_init reload
}

swarm_token_write() {
  echo "$1" > /run/swarm/token
  $TEAM serf set swarm-token=true >/dev/null
}

swarm_token_read() {
  cat /run/swarm/token 2>/dev/null
}

swarm_token_receive() {
  $TEAM serf query -tags swarm-token=true swarm-token
}