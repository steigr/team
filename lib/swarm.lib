require team
require coreos
require serf
require network
require docker
require config

swarm_update() {
  swarm_stop
  swarm_install
}

swarm_install() {
  _swarm_write_unit
  swarm_start
}

swarm_start() {
  coreos_start swarm
}

swarm_stop() {
  coreos_stop swarm
}

swarm_token() {
  TIMEOUT=$(_swarm_token_discovery_timeout) _serf_query_json -tag swarm-token=true swarm-token | _serf_query_json_values | head -1
}

swarm_create-token() {
  token=$(coreos_early_docker run --net=host swarm create)
  _swarm_write_token $token
}

swarm_local-token() {
  serf_get swarm-token
}

swarm_environment() {
  env_file=${1:-$(_swarm_environment_file)}
  mkdir -p $(dirname $env_file)
  token=$(swarm_token)
  test -z $token && token=$(swarm_local-token)
  test -z $token && token=$(swarm_create-token)
  echo "SWARM_DISCOVERY=$token" >> $env_file
}

swarm_id() {
  sid=$($(_docker early) ps 2>/dev/null | grep '/swarm manage' | _docker_get_id_by_image_name "swarm")
  [[ "$sid" ]] && $(_docker early) inspect --format '{{ .Id }}' $sid 2>/dev/null
}

swarm_clean() {
  swarm_stop
  _coreos_remove_unit $(_coreos_unit swarm)
}

swarm_() {
  DOCKER_HOST=tcp://$(private_ipv4_address):2375 docker $*
}

_swarm_environment_file() {
  echo "/run/swarm/env"
}

_swarm_token_file() {
  echo "$(_serf_kv_dir)/swarm-token"
}

_swarm_write_unit() {
  _coreos_write_unit $(coreos_unit swarm) <<EO_SWARM_UNIT
[Unit]
Description=Docker Swarm Cluster Frontend
Requires=early-docker.service
After=early-docker.service
[Service]
Restart=always
Environment=$(coreos_early_docker_env)
ExecStartPre=-$(_docker) rm swarm
ExecStartPre=$(_team) swarm environment $(_swarm_environment_file)
ExecStartPre=$(_team) serf event serf-check
ExecStart=$(_docker) run --name=swarm --env-file=$(_swarm_environment_file) --net=host swarm manage
ExecStop=-$(_docker) stop swarm
EO_SWARM_UNIT
}

_swarm_token_var() {
  echo "SWARM_TOKEN="
}

_swarm_write_token() {
  echo "token://$1" | serf_set swarm-token >/dev/null
  _serf_check "swarm local-token" swarm-token
  serf_get swarm-token
}

_swarm_token_discovery_timeout() {
  _defaults serf_query_timeout
}