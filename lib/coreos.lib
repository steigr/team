coreos_unit() {
  _coreos_unit $*
}

_coreos_unit() {
  if [[ $# -ge 2 ]]; then
    unit="${2}.${1}"
    case "$1" in
      socket)
        sd_dir="/etc/systemd/system"
      ;;
    esac
  else
    unit="${1}.service"
  fi
  echo "${sd_dir:-/etc/systemd/system}/${unit}"
}

coreos_start() {
  _coreos_start $*
}

coreos_stop() {
  _coreos_stop $*
}

coreos_restart() {
  systemctl restart $1
}

coreos_init() {
  case "$1" in
    reload)
      systemctl daemon-reload
    ;;
  esac
}

coreos_socket() {
  systemctl enable $1.socket
}

coreos_status() {
  systemctl status $1 2>/dev/null >/dev/null
}

coreos_unit_present() {
  test "$(systemctl list-unit-files | grep $1)"
}

coreos_unit_enabled() {
  test "x$(systemctl list-unit-files | grep $1 | awk '{print $2}')" = "xenabled"
}

coreos_early_docker_env() {
  echo "DOCKER_HOST=unix:///run/early-docker.sock"
}

coreos_early_docker() {
  /bin/sh -c "$(coreos_early_docker_env) docker $*"
}

coreos_ip() {
  private_ipv4_address
}

_coreos_write_unit() {
  cat | tee $1 >/dev/null
  systemctl daemon-reload
}

_coreos_start() {
  systemctl start $1
}

_coreos_stop() {
  systemctl stop $1
}

_coreos_remove_unit() {
  rm $1 2>/dev/null && systemctl daemon-reload || true
}

_coreos_socket() {
  systemctl $1 $2.socket
}

_coreos_active() {
  systemctl is-active $1 \
  && true \
  || false
}