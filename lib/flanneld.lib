require network
require etcd
require coreos

flanneld_update() {
  flanneld_stop
  flanneld_install
}

flanneld_install() {
  _flanneld_config_present || _flanneld_write_config
  _flanneld_write_dropin
  _flanneld_write_docker_network_clean
  flanneld_start
}

flanneld_start() {
  _coreos_start flanneld
}

flanneld_stop() {
  _coreos_stop flanneld
}

flanneld_clean() {
  _coreos_remove_unit $(_flanneld_dropin_file)
  _coreos_remove_unit $(_flanneld_drocker_dropin)
}

flanneld_startable() {
  _startable flanneld etcd
}

_flanneld_write_dropin() {
  mkdir -p $(dirname $(_flanneld_dropin_file)) >/dev/null
  _coreos_write_unit $(_flanneld_dropin_file) << EO_FLANNELD_DROPIN
[Service]
Environment="FLANNELD_INTERFACE=$(_flanneld_interface)"
EO_FLANNELD_DROPIN
}

_flanneld_write_docker_network_clean() {
  mkdir -p $(dirname $(_flanneld_drocker_dropin)) >/dev/null
  _coreos_write_unit $(_flanneld_drocker_dropin) << EO_FLANNEL_DOCKER_DROPIN
[Service]
ExecStartPre=$(_team) flanneld install
EO_FLANNEL_DOCKER_DROPIN
}

_flanneld_drocker_dropin() {
  echo "/run/systemd/system/docker.service.d/00-flannel.conf"
}

_flanneld_dropin_file() {
  echo "/run/systemd/system/flanneld.service.d/20-cloudinit.conf"
}

_flanneld_config_present() {
  _etcd_get "$(_flanneld_etcd_path)" >/dev/null && true || false
}

_flanneld_write_config() {
  _etcd_set "$(_flanneld_etcd_path)" "$(_flanneld_json)"
}

_flanneld_etcd_path() {
  echo "/coreos.com/network/config"
}

_flanneld_json() {
  echo "{'Network':'$(_flanneld_network)','SubnetLen':$(_flanneld_subnet_len),'SubnetMin':'$(_flanneld_subnet_min)','SubnetMax':'$(_flanneld_subnet_max)','Backend':{'Type':'$(_flanneld_backend_type)',$(_flanneld_vxlan_backend_options)}}" \
  | sed -e "s:':\":g"
}

_flanneld_interface() {
  private_interfaces | head -1
}

_flanneld_network() {
  echo "10.255.0.0/16"
}

_flanneld_subnet_len() {
  echo "24"
}

_flanneld_subnet_min() {
  echo "10.255.10.0"
}

_flanneld_subnet_max() {
  echo "10.255.250.0"
}

_flanneld_backend_type() {
  echo "vxlan"
}

_flanneld_udp_backend_options() {
  echo "'Port':7890"
}

_flanneld_vxlan_backend_options() {
  echo "'VNI':1"
}