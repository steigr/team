. $TEAM_LIB/team.lib
. $TEAM_LIB/coreos.lib
. $TEAM_LIB/serf.lib
. $TEAM_LIB/docker.lib

set -x

dokku_start() {
  _dokku_start_container
}

dokku_stop() {
  _dokku_stop_container
}

dokku_install() {
  dokku_stop
  _dokku_build_container
  dokku_start
}

dokku_env() {
  _dokku_env
}

dokku_nerve() {
  _dokku_nerve
}

dokku_nerve-config() {
  _dokku_nerve_json
}

_dokku_container_name() {
  echo "dokku"
}

_dokku_stop_container() {
  coreos_stop $(_dokku_container_name)
}

_dokku_start_container() {
  _dokku_unit_write $(coreos_unit dokku)
  coreos_start $(_dokku_container_name)
}

_dokku_authorized_keys() {
  echo "/home/core/.ssh/authorized_keys"
}

_dokku_graph_dir() {
  echo "/var/lib/docker"
}

_dokku_docker_socket() {
  echo "/var/run/docker.sock"
}

_dokku_base_container() {
  _dokku_container_name
}

_dokku_build_container() {
  cnt=$(_dokku_container_name)
  /usr/bin/docker stop -t10 $cnt
  /usr/bin/docker rm $cnt
  docker images | grep "^dokku " && base_image=dokku
  base_image=${base_image:-ubuntu:latest}
  /usr/bin/docker run -d -t --privileged --net=host --name $cnt -v $(_dokku_home):$(_dokku_home) -v $(_dokku_authorized_keys):$(_dokku_authorized_keys) -v $(_dokku_graph_dir):$(_dokku_graph_dir) -v $(_dokku_docker_socket):$(_dokku_docker_socket) $base_image /bin/sh
  set -e
  _dokku_core_install_command | while read cmd; do
    docker exec -t $cnt /bin/sh -l -c "$cmd"
  done
  set +e
  /usr/bin/docker stop -t2 $cnt
  id=$(/usr/bin/docker commit -f $cnt)
  /usr/bin/docker tag $id dokku
  /usr/bin/docker rm $cnt
}

_dokku_unit_write() {
  coreos_write_unit $(coreos_unit dokku) <<EO_DOKKU_UNIT
[Unit]
Description=Dokku PaaS
Requires=early-docker.service
After=early-docker.service
[Service]
Restart=always
ExecStartPre=-/usr/bin/docker rm $(_dokku_container_name)
ExecStartPre=$TEAM dokku env
ExecStart=/usr/bin/docker run --rm -t --privileged --env-file=$(_dokku_env_file) --name $(_dokku_container_name) -v $(_dokku_nerve_config):/etc/nerve.json -v $(_dokku_home):$(_dokku_home) -v $(_dokku_authorized_keys):$(_dokku_authorized_keys) -v $(_dokku_graph_dir):$(_dokku_graph_dir) -v $(_dokku_docker_socket):$(_dokku_docker_socket) $(_dokku_base_container) /usr/sbin/sshd -D -f /etc/ssh/sshd_config
ExecStop=-/usr/bin/docker stop $(_dokku_container_name)
EO_DOKKU_UNIT
}

_dokku_nerve() {
  coreos_stop dokku-nerve
  _coreos_write_unit $(coreos_unit dokku-nerve) <<EO_DOKKU_NERVE_UNIT
[Unit]
Description=Dokku Paas Service Discovery
Requires=dokku.service
After=dokku.service
[Service]
Restart=always
ExecStartPre=$TEAM dokku nerve-config
ExecStart=/usr/bin/docker exec $(_dokku_container_name) nerve -c /etc/nerve.json
EO_DOKKU_NERVE_UNIT
  coreos_start dokku-nerve
}

_dokku_core_install_command() {
  cat<<DOKKU_INSTALL_CORE_COMMANDS
ping -c1 de.archive.ubuntu.com
sed -i -e "s@http://archive@http://de.archive@g" /etc/apt/sources.list
apt-get update
apt-get dist-upgrade -y
apt-get autoremove -y
apt-get install curl openssh-server openssh-client apt-transport-https ca-certificates -y
/etc/init.d/ssh start
mkdir -p /root/.ssh
cat $(_dokku_authorized_keys) > /root/.ssh/authorized_keys
curl -fLo bootstrap.sh https://raw.github.com/progrium/dokku/v0.3.18/bootstrap.sh
sed -i -e 's:"linux-image-extra-\$(uname -r)"::' bootstrap.sh
test -f /sbin/modprobe.real || mv /sbin/modprobe /sbin/modprobe.real
test -f /sbin/modprobe      || ln /bin/true /sbin/modprobe
tail -1 /root/.ssh/authorized_keys > /root/dokku_id.pub
echo dokku dokku/vhost_enable boolean false | debconf-set-selections
echo dokku dokku/web_config boolean false | debconf-set-selections
echo dokku dokku/hostname string dokku.me | debconf-set-selections
echo dokku dokku/key_file string /root/dokku_id.pub | debconf-set-selections
/bin/bash -x bootstrap.sh
groupmod -g $(stat -c %g /run/docker.sock) docker
gem install nerve --no-ri --no-rdoc
DOKKU_INSTALL_CORE_COMMANDS
}

_dokku_home() {
  echo "/home/dokku"
}

_dokku_apps() {
  find $(_dokku_home) -mindepth 1 -maxdepth 1 -type d -not -name '.*' | cut -f4 -d/
}

_dokku_env() {
  env_file=$(_dokku_env_file)
  mkdir -p $(dirname $env_file)
  cat <<EO_DOKKU_ENV | tee $env_file >/dev/null
ZK_SERVER=$($TEAM zookeeper ip)
NERVE_PATH="$(_dokku_nerve_ssh_path)"
EO_DOKKU_ENV
}

_dokku_env_file() {
  echo "/run/dokku/env"
}

_dokku_nerve_ssh_path() {
  echo "/team/dokku/ssh/services"
}

_dokku_nerve_json() {
  echo "{'instance_id':'$(serf_node_name)','services':{'ssh':{'host': '$(_docker_ip $(_dokku_container_name))','port':22,'reporter_type':'zookeeper','zk_hosts': ['$($TEAM zookeeper ip):2181'],'zk_path': '$(_dokku_nerve_ssh_path)','check_interval': 2,'checks': [{'type': 'tcp','timeout': 0.2,'rise': 3,'fall': 2}]}}}" \
  | sed -e "s:':\":g" \
  | tee $(_dokku_nerve_config)
}

_dokku_nerve_config() {
  echo "/run/dokku/nerve"
}