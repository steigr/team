require team
require coreos
require serf
require docker
require random
require zookeeper

dokku_update() {
  _dokku_build_container
  dokku_stop
  dokku_install
}

dokku_install() {
  _dokku_unit_write
  dokku_start
}

dokku_start() {
  _coreos_start dokku
}

dokku_stop() {
  _coreos_stop dokku
}

dokku_env() {
  _dokku_env
}

dokku_nerve() {
  _dokku_nerve
}

dokku_nerve-config() {
  _dokku_nerve_json
}

dokku_synapse() {
  _dokku_synapse
}

dokku_synapse-config() {
  _dokku_synapse_json
}

dokku_ip() {
  serf_query dokku-ip | _serf_query_filter $(_dokku_ip_var) | head -n1
}

dokku_local-ip() {
  _docker_ip $(_dokku_container_name)
}

dokku_id() {
  _docker_ids_by_image "dokku" | head -1
}

dokku_rm() {
  for id in $(_docker_ids_by_image $(_dokku_image_name)); do
    docker rm $id
  done
}

dokku_exec() {
  docker exec $(dokku_id) $*
}

_dokku_container_name() {
  _docker_name_by_id $(dokku_id)
}

_dokku_image_name() {
  echo "dokku"
}

_dokku_stop_container() {
  coreos_stop $(_dokku_container_name)
}

_dokku_start_container() {
  _dokku_unit_write $(coreos_unit dokku)
  _coreos_start $(_dokku_container_name)
}

_dokku_authorized_keys() {
  echo "/home/core/.ssh/authorized_keys"
}

_dokku_graph_dir() {
  echo "/var/lib/docker"
}

_dokku_docker_socket() {
  echo "/var/run/docker.sock"
}

_dokku_base_container() {
  _dokku_container_name
}

_dokku_docker_command() {
  echo "$(_docker) run -v $(_dokku_nerve_config):$(_dokku_nerve_config) -v $(_dokku_synapse_config):$(_dokku_synapse_config) -v $(_dokku_authorized_keys):$(_dokku_authorized_keys) -v $(_dokku_graph_dir):$(_dokku_graph_dir) -v $(_dokku_docker_socket):$(_dokku_docker_socket) $* $(_dokku_image_name)"
}

_dokku_build_container() {
  set -x
  set -e
  temp_dir=$(mktemp -d /tmp/XXXXXX)
  _dokku_entrypoint_write $temp_dir
  _dokku_write_dockerfile $temp_dir
  docker build -t $(_dokku_image_name) $temp_dir
  rm -r $temp_dir
  _dokku_bootstrap_commands | while read cmd; do
    name=$(_random 8)
    $(_dokku_docker_command --name=$name --entrypoint=/bin/sh -v $(_dokku_home):$(_dokku_home)_host) -c "$cmd"
    iid=$(docker commit $name)
    docker tag -f $iid $(_dokku_image_name)
    docker rm $name
  done
  set +e
}

_dokku_write_dockerfile() {
  cat <<EO_DOKKU_DOCKERFILE | tee $1/Dockerfile >/dev/null
FROM ubuntu:latest
MAINTAINER Mathias Kaufmann <me@stei.gr>
RUN export DEBIAN_FRONTEND=noninteractive \
 && ping -c1 de.archive.ubuntu.com \
 && sed -i -e "s@http://archive@http://de.archive@g" /etc/apt/sources.list \
 && apt-get update \
 && apt-get dist-upgrade -y \
 && apt-get autoremove -y \
 && apt-get install curl openssh-server openssh-client apt-transport-https ca-certificates ruby ruby-dev devscripts haproxy -y \
 && apt-get clean \
 && gem install nerve synapse foreman --no-ri --no-rdoc \
 && curl -fLo bootstrap.sh https://raw.github.com/progrium/dokku/v0.3.18/bootstrap.sh \
 && sed -i -e 's:"linux-image-extra-\$(uname -r)"::' bootstrap.sh \
 && test -f /sbin/modprobe.real || mv /sbin/modprobe /sbin/modprobe.real \
 && test -f /sbin/modprobe      || ln /bin/true /sbin/modprobe \
 && echo dokku dokku/vhost_enable boolean false | debconf-set-selections \
 && echo dokku dokku/web_config boolean false | debconf-set-selections \
 && echo dokku dokku/hostname string dokku.me | debconf-set-selections \
 && echo dokku dokku/key_file string /root/dokku_id.pub | debconf-set-selections \
 && echo debconf debconf/frontend noninteractive | debconf-set-selections \
 && echo debconf debconf/frontend string noninteractive | debconf-set-selections \
 && mkdir /app /root/.ssh \
 && echo "ssh: /usr/sbin/sshd -D -f /etc/ssh/sshd_config" > /app/Procfile \
 && echo "nerve: \$(which nerve) -c $(_dokku_nerve_config)" >> /app/Procfile \
 && echo "synapse: \$(which synapse) -c $(_dokku_synapse_config)" >> /app/Procfile \
 && cp /app/Procfile /app/.release
ADD $(_dokku_entrypoint_file) /$(_dokku_entrypoint_file)
EXPOSE 22
ENTRYPOINT ["/start"]
EO_DOKKU_DOCKERFILE
}
# ONBUILD VOLUME ["$(_dokku_graph_dir)","$(_dokku_docker_socket)","$(_dokku_nerve_config)","$(_dokku_synapse_config)","$(_dokku_home)","$(_dokku_authorized_keys)"]

_dokku_bootstrap_commands() {
  cat<<EO_DOKKU_BOOTSTRAP_COMMANDS
tail -1 $(_dokku_authorized_keys) > /root/dokku_id.pub
DOKKU_BRANCH=master bash bootstrap.sh || true
groupmod -g $(stat -c %g /run/docker.sock) docker
rsync -arv $(_dokku_home)/ $(_dokku_home)_host
rm /root/dokku_id.pub /root/.ssh/authorized_keys || true
EO_DOKKU_BOOTSTRAP_COMMANDS
}

_dokku_unit_write() {
  _coreos_write_unit $(coreos_unit dokku) <<EO_DOKKU_UNIT
[Unit]
Description=Dokku PaaS
Requires=docker.service
After=docker.service
[Service]
Restart=always
ExecStartPre=-$TEAM dokku rm
ExecStartPre=$TEAM dokku env
ExecStart=$(_dokku_docker_command -v $(_dokku_home):$(_dokku_home) --rm ) /start ssh
EO_DOKKU_UNIT
}

_dokku_nerve() {
  _coreos_stop dokku-nerve
  _coreos_write_unit $(coreos_unit dokku-nerve) <<EO_DOKKU_NERVE_UNIT
[Unit]
Description=Dokku Paas Service Annoucement
Requires=dokku.service
After=dokku.service
[Service]
Restart=always
ExecStartPre=$TEAM dokku nerve-config
ExecStart=$TEAM dokku exec /start nerve
EO_DOKKU_NERVE_UNIT
  _coreos_start dokku-nerve
}

_dokku_synapse() {
  [[ -z $(public_ipv4_address) ]] && exit
  _coreos_stop dokku-synapse
  _coreos_write_unit $(coreos_unit dokku-synapse) <<EO_DOKKU_NERVE_UNIT
[Unit]
Description=Dokku Paas Socket Proxy
[Service]
Restart=always
ExecStartPre=/usr/bin/docker pull steigr/synapse
ExecStartPre=$TEAM dokku synapse-config
ExecStart=/usr/bin/docker run --rm -v $(_dokku_synapse_config):/etc/synapse/synapse.json -p $(public_ipv4_address):22:22 steigr/synapse
EO_DOKKU_NERVE_UNIT
  _coreos_start dokku-nerve
}

_dokku_entrypoint_file() {
  echo "start"
}

_dokku_entrypoint_write() {
  cat <<'EO_DOKKU_ENTRYPOINT' | tee $1/$(_dokku_entrypoint_file) >/dev/null
#!/bin/bash
export HOME=/app
cd /app

if test ! -f /root/.ssh/authorized_keys; then
  mkdir /root/.ssh
  echo -n "ssh-"> /root/.ssh/authorized_keys
  head -1 /home/dokku/.ssh/authorized_keys | awk -F' ssh-' '{print $2}' >> /root/.ssh/authorized_keys
fi

mkdir -p /var/run/sshd 2>/dev/null || true

case "$(basename $0)" in
  start)
    if test ! -f Procfile; then
      ruby -e "require 'yaml';File.write('Procfile', (YAML.load_file('.release')['default_process_types'] || {}).to_yaml)"
    fi
    command="foreman start --procfile=Procfile $@"
    ;;
  *)
    command="$@"
    ;;
esac

if [[ -z "$command" ]]; then
  echo "Missing command ($@)"
  exit 1
fi

exec $(eval echo ${command})
EO_DOKKU_ENTRYPOINT
  chmod +x $1/$(_dokku_entrypoint_file)
}

_dokku_home() {
  echo "/home/dokku"
}

_dokku_apps() {
  find $(_dokku_home) -mindepth 1 -maxdepth 1 -type d -not -name '.*' | cut -f4 -d/
}

_dokku_env() {
  env_file=$(_dokku_env_file)
  mkdir -p $(dirname $env_file)
  cat <<EO_DOKKU_ENV | tee $env_file >/dev/null
ZK_SERVER=$(zookeeper_ip)
NERVE_PATH="$(_dokku_nerve_ssh_path)"
EO_DOKKU_ENV
  touch $(_dokku_nerve_config) $(_dokku_synapse_config)
}

_dokku_env_file() {
  echo "/run/dokku/env"
}

_dokku_nerve_ssh_path() {
  echo "/team/dokku/ssh/services"
}

_dokku_nerve_json() {
  echo "{'instance_id':'$(serf_node-name)','services':{'ssh':{'host': '$(dokku_local-ip)','port':22,'reporter_type':'zookeeper','zk_hosts': ['$(zookeeper_ip):2181'],'zk_path': '$(_dokku_nerve_ssh_path)','check_interval': 2,'checks': [{'type': 'tcp','timeout': 0.2,'rise': 3,'fall': 2}]}}}" \
  | sed -e "s:':\":g" \
  | tee $(_dokku_nerve_config)
}

_dokku_nerve_config() {
  echo "/run/dokku/nerve"
}

_dokku_synapse_config() {
  echo "/run/dokku/synapse"
}

_dokku_ip_var() {
  echo "DOKKU_IP="
}

_dokku_synapse_json() {
  echo "{'services':{'dokku':{'default_servers':[{'name':'local-node','host':'$(coreos_ip)','port':2220}],'discovery':{'method':'zookeeper','path':'/team/dokku/ssh/services','hosts':['$(zookeeper_ip):2181']},'haproxy':{'bind_address':'0.0.0.0',;'port':22,'server_options':'check inter 2s rise 3 fall 2','listen':['mode tcp']}}},'haproxy':{'reload_command':'service haproxy reload','config_file_path':'/etc/haproxy/haproxy.cfg','socket_file_path':'/tmp/haproxy.sock','do_writes':true,'do_reloads':true,'do_socket':true,'global':['daemon','user root','group root','maxconn 4096','log 127.0.0.1 local0','log 127.0.0.1 local1 notice','stats socket /tmp/haproxy.sock mode 666 level admin'],'defaults':['log global','option dontlognull','maxconn 2000','retries 3','timeout server 1m','option redispatch','balance roundrobin']}}" \
  | sed -e "s:':\":g" \
  | tee $(_dokku_synapse_config)
}