require team
require coreos

docker_update() {
  docker_stop
  docker_install
}

docker_install() {
  _docker_write_tcp_unit
  docker_start
}

docker_start() {
  _coreos_socket enable docker-tcp
  _coreos_start docker-tcp.socket
}

docker_stop() {
  _coreos_stop docker
  _coreos_stop docker-tcp.socket
}

docker_tcp-unit() {
  _docker_write_tcp_unit
}
docker_tcp-enable() {
  coreos_stop docker
  coreos_socket docker-tcp
}

docker_bound() {
  case "$1" in
    tcp)
      coreos_unit_present docker-tcp.socket || exit 1
      coreos_unit_enabled docker-tcp.socket || exit 1
      exit 0
    ;;
  esac 
}

docker_bind() {
  case "$1" in
    tcp)
      coreos_unit_present docker-tcp.socket || docker_tcp-unit
      coreos_unit_enabled docker-tcp.socket || docker_tcp-enable
    ;;
  esac
}

docker_tcp-port() {
  echo "4375"
}

docker_clean() {
  _coreos_socket disable docker-tcp
  _coreos_remove_unit $(_coreos_unit docker-tcp.socket)
}

_docker_write_tcp_unit() {
  _coreos_write_unit $(_coreos_unit socket docker-tcp) <<EO_DOCKER_UNIT
[Unit]
Description=Docker Socket for the API

[Socket]
ListenStream=$(docker_tcp-port)
BindIPv6Only=both
Service=docker.service

[Install]
WantedBy=sockets.target
EO_DOCKER_UNIT
}

_docker_id_by_name() {
  docker inspect --format '{{ .Id }}' $1
}

_docker_name_by_id() {
  docker inspect --format='{{ .Name }}' $1 | sed -e 's:^/::g'
}

_docker_ids_by_image() {
  if [[ $# -eq 2 ]]; then
    op=$1
    image=$2
  else
    image=$1
  fi
  docker ps $op -q | while read iid; do
    imname=$(docker inspect --format='{{ .Config.Image }}' $iid)
    test "x$image" = "x$imname" && echo $iid
  done
}

_docker_ip() {
  [[ "x$1" = "x" ]] || docker inspect --format '{{ .NetworkSettings.IPAddress }}' $1
}

_docker() {
  r=$(which docker)
  [[ "$1" ]] && r="$r -H unix:///run/${1}-docker.sock"
  echo $r
}

_docker_get_id_by_image_name() {
  awk '{print $1 " " $2 }' | grep $1 | awk '{print $1}'
}