require team
require coreos
require serf
require network
require docker
require swarm

bee_update() {
  bee_stop
  bee_install
}

bee_install() {
  _bee_write_unit
  bee_start
}

bee_start() {
  coreos_start bee
}

bee_stop() {
  coreos_stop bee
}

bee_environment() {
  env_file=${1:-$(_bee_environment_file)}
  mkdir -p $(dirname $env_file)
  token=$(swarm_token)
  test -z $token && token=$(swarm_local-token)
  test -z $token && token=$(swarm_create-token)
  echo "SWARM_ADDR=$(private_ipv4_address):$(docker_tcp-port)" > $env_file
  echo "SWARM_DISCOVERY=$token" >> $env_file
}

bee_clean() {
  _coreos_remove_unit $(_coreos_unit bee)
}

bee_id() {
  DOCKER_HOST=unix:///run/early-docker.sock docker inspect --format '{{ .Id }}' bee
}
_bee_write_unit() {
  _coreos_write_unit $(coreos_unit bee) <<EO_BEE_UNIT
[Unit]
Description=Docker Swarm Cluster Announcement
Requires=early-docker.service
After=early-docker.service
[Service]
Restart=always
Environment=$(coreos_early_docker_env)
ExecStartPre=-$(_docker) rm bee
ExecStartPre=$(_team) bee environment $(_bee_environment_file)
ExecStart=$(_docker) run --name=bee --env-file=$(_bee_environment_file) --net=host swarm join
ExecStop=-$(_docker) stop bee
EO_BEE_UNIT
}

_bee_environment_file() {
  echo "/run/bee/env"
}