require team
require coreos
require network

interlock_update() {
  interlock_stop
  interlock_install
}

interlock_install() {
  _interlockable
  _interlock_write_unit
  interlock_start
}

interlock_start() {
  _coreos_start interlock.service
}

interlock_stop() {
  _coreos_stop interlock.service
}

interlock_environment() {
  env_file=${1:-$(_interlock_environment_file)}
  _interlock_write_environment $env_file
  cat $env_file
}

interlock_id() {
  coreos_early_docker inspect --format \"{{ .Id }}\" $(_interlock_container_name)
}

_interlock_test() {
  _interlockable
}
_interlockable() {
  [[ -z "$(public_ipv4_address)" ]] && exit 1 
}

_interlock_write_unit() {
  _coreos_write_unit  $(coreos_unit interlock) <<EO_INTERLOCK_UNIT
[Unit]
Description=Interlock Load-Balancer
Requires=early-docker.service
After=early-docker.service
[Service]
Restart=always
ExecStartPre=-/usr/bin/docker rm $(_interlock_container_name)
ExecStartPre=-/usr/bin/mkdir -p $(_interlock_ssl_dir)
ExecStartPre=$TEAM interlock environment $(_interlock_environment_file)
ExecStartPre=$TEAM ssl populate-interlock
ExecStart=$TEAM interlock docker
ExecStop=-/usr/bin/docker stop $(_interlock_container_name)
EO_INTERLOCK_UNIT
}

interlock_docker() {
  INTERLOCK_SWARM_URL=tcp://$(private_ipv4_address):2375
  INTERLOCK_PLUGIN=$(_interlock_plugin_name)
  INTERLOCK_PLUGIN_ARGS=$(_interlock_plugin_args)
  cmd="/usr/bin/docker run -v $(_interlock_ssl_dir):/ssl --env-file=$(_interlock_environment_file) -p $(_interlock_http_binding) -p $(_interlock_https_binding) --rm --name=$(_interlock_container_name) ehazlett/interlock --swarm-url $INTERLOCK_SWARM_URL --plugin $INTERLOCK_PLUGIN start $INTERLOCK_PLUGIN_ARGS"  
  echo $cmd
  $cmd
}

_interlock_write_environment() {
  mkdir -p $(dirname $1)
  cat<<EO_INTERLOCK_ENV | tee $1
HAPROXY_SSL_CERT=$(_interlock_balancer_cert)
HAPROXY_SSL_OPTS="crt /ssl no-sslv3 ciphers EECDH+ECDSA+AESGCM:EECDH+aRSA+AESGCM:EECDH+ECDSA+SHA384:EECDH+ECDSA+SHA256:EECDH+aRSA+SHA384:EECDH+aRSA+SHA256:EECDH+aRSA+RC4:EECDH:EDH+aRSA:RC4:!aNULL:!eNULL:!LOW:!3DES:!MD5:!EXP:!PSK:!SRP:!DSS"
EO_INTERLOCK_ENV
}

_interlock_plugin_name() {
  echo "haproxy"
}

_interlock_plugin_args() {
  echo ""
}

_interlock_environment_file() {
  echo "/run/interlock/env"
}

_interlock_ssl_dir() {
  echo "/run/interlock/ssl"
}

_interlock_container_name() {
  echo "interlock"
}

_interlock_balancer_cert() {
  echo "/ssl/interlock.pem"
}

_interlock_host_balancer_cert() {
  echo "/run/interlock/$(_interlock_balancer_cert)"
}

_interlock_http_binding() {
  echo "$(public_ipv4_address):80:8080"
}

_interlock_https_binding() {
  echo "$(public_ipv4_address):443:8443"
}